name: ProgMusix

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        
    - name: Build and run Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
        docker-compose -f docker-compose.yml ps

    
    - name: Check running containers
      run: docker-compose -f compose.yaml ps

    - name: Check backend container logs
      run: docker logs backend

    - name: Install Newman
      run: npm install -g newman@latest

    - name: Run Postman tests
      run: |
        npx newman run Postman/postman_collection.json -e Postman/postman_environment.json 
        
    - name: Test with pytest
      env:
        FRONTEND_URL: http://localhost:4200
        BACKEND_URL: http://localhost:8080
        DATABASE_HOST: localhost
        DATABASE_PORT: 3306
        DATABASE_USER: root
        DATABASE_PASSWORD: test1234
        DATABASE_NAME: webshop
      run: |
        pytest --alluredir=allure-results

    - name: Allure Report action from marketplace
      if: always()
      uses: simple-elf/allure-report-action@master
      with:
        allure_results: allure-results
        allure_history: allure-history
        keep_reports: 20

    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history
