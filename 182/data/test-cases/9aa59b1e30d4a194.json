{"uid":"9aa59b1e30d4a194","name":"test_contact","fullName":"test_progmusix.TestProgmusix#test_contact","historyId":"b5dce28c82d19d1a9dd51e40aa11eb9f","time":{"start":1725006456197,"stop":1725006456197,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=128.0.6613.84)\nStacktrace:\n#0 0x5634c247c81a <unknown>\n#1 0x5634c214ae50 <unknown>\n#2 0x5634c2143011 <unknown>\n#3 0x5634c21330e9 <unknown>\n#4 0x5634c2134e54 <unknown>\n#5 0x5634c213339d <unknown>\n#6 0x5634c2132c1c <unknown>\n#7 0x5634c2132b0d <unknown>\n#8 0x5634c2130b11 <unknown>\n#9 0x5634c21311aa <unknown>\n#10 0x5634c214d771 <unknown>\n#11 0x5634c21de515 <unknown>\n#12 0x5634c21bf492 <unknown>\n#13 0x5634c21dd9c6 <unknown>\n#14 0x5634c21bf233 <unknown>\n#15 0x5634c218d093 <unknown>\n#16 0x5634c218e09e <unknown>\n#17 0x5634c2443a7b <unknown>\n#18 0x5634c2447a31 <unknown>\n#19 0x5634c242f645 <unknown>\n#20 0x5634c24485a2 <unknown>\n#21 0x5634c241481f <unknown>\n#22 0x5634c246b618 <unknown>\n#23 0x5634c246b7e2 <unknown>\n#24 0x5634c247b60c <unknown>\n#25 0x7f585fa94ac3 <unknown>","statusTrace":"self = <test_progmusix.TestProgmusix object at 0x7fa9e0f08040>\n\n    def setup_method(self):\n        page = ProgMusix(get_preconfigured_chrome_driver())\n        self.page = page\n>       page.open()\n\ntest_progmusix.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconfigs/general_model.py:11: in open\n    self.browser.get(self.url)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa9e0f0aaa0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x5634c246b7e2 \\\\u003Cunknown>\\\\n#24 0x5634c247b60c \\\\u003Cunknown>\\\\n#25 0x7f585fa94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=128.0.6613.84)\nE       Stacktrace:\nE       #0 0x5634c247c81a <unknown>\nE       #1 0x5634c214ae50 <unknown>\nE       #2 0x5634c2143011 <unknown>\nE       #3 0x5634c21330e9 <unknown>\nE       #4 0x5634c2134e54 <unknown>\nE       #5 0x5634c213339d <unknown>\nE       #6 0x5634c2132c1c <unknown>\nE       #7 0x5634c2132b0d <unknown>\nE       #8 0x5634c2130b11 <unknown>\nE       #9 0x5634c21311aa <unknown>\nE       #10 0x5634c214d771 <unknown>\nE       #11 0x5634c21de515 <unknown>\nE       #12 0x5634c21bf492 <unknown>\nE       #13 0x5634c21dd9c6 <unknown>\nE       #14 0x5634c21bf233 <unknown>\nE       #15 0x5634c218d093 <unknown>\nE       #16 0x5634c218e09e <unknown>\nE       #17 0x5634c2443a7b <unknown>\nE       #18 0x5634c2447a31 <unknown>\nE       #19 0x5634c242f645 <unknown>\nE       #20 0x5634c24485a2 <unknown>\nE       #21 0x5634c241481f <unknown>\nE       #22 0x5634c246b618 <unknown>\nE       #23 0x5634c246b7e2 <unknown>\nE       #24 0x5634c247b60c <unknown>\nE       #25 0x7f585fa94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":true,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestProgmusix","time":{"start":1725006456198,"stop":1725006456669,"duration":471},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=128.0.6613.84)\nStacktrace:\n#0 0x5634c247c81a <unknown>\n#1 0x5634c214ae50 <unknown>\n#2 0x5634c2143011 <unknown>\n#3 0x5634c21330e9 <unknown>\n#4 0x5634c2134e54 <unknown>\n#5 0x5634c213339d <unknown>\n#6 0x5634c2132c1c <unknown>\n#7 0x5634c2132b0d <unknown>\n#8 0x5634c2130b11 <unknown>\n#9 0x5634c21311aa <unknown>\n#10 0x5634c214d771 <unknown>\n#11 0x5634c21de515 <unknown>\n#12 0x5634c21bf492 <unknown>\n#13 0x5634c21dd9c6 <unknown>\n#14 0x5634c21bf233 <unknown>\n#15 0x5634c218d093 <unknown>\n#16 0x5634c218e09e <unknown>\n#17 0x5634c2443a7b <unknown>\n#18 0x5634c2447a31 <unknown>\n#19 0x5634c242f645 <unknown>\n#20 0x5634c24485a2 <unknown>\n#21 0x5634c241481f <unknown>\n#22 0x5634c246b618 <unknown>\n#23 0x5634c246b7e2 <unknown>\n#24 0x5634c247b60c <unknown>\n#25 0x7f585fa94ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 890, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/_pytest/python.py\", line 821, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/_pytest/python.py\", line 717, in _call_with_optional_argument\n    func()\n  File \"/home/runner/work/ProgMusixproba/ProgMusixproba/test_progmusix.py\", line 11, in setup_method\n    page.open()\n  File \"/home/runner/work/ProgMusixproba/ProgMusixproba/configs/general_model.py\", line 11, in open\n    self.browser.get(self.url)\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 363, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"suite","value":"test_progmusix"},{"name":"subSuite","value":"TestProgmusix"},{"name":"host","value":"fv-az1567-788"},{"name":"thread","value":"2915-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_progmusix"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dd0322e2d9f34e57","status":"passed","time":{"start":1724855020487,"stop":1724855021299,"duration":812}},{"uid":"2938b4df65bf36db","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=127.0.6533.122)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6722A9642+30946]\n\t(No symbol) [0x00007FF67225E3D9]\n\t(No symbol) [0x00007FF672156FDA]\n\t(No symbol) [0x00007FF67214F0B5]\n\t(No symbol) [0x00007FF6721401E9]\n\t(No symbol) [0x00007FF672141D62]\n\t(No symbol) [0x00007FF6721404CE]\n\t(No symbol) [0x00007FF67213FD41]\n\t(No symbol) [0x00007FF67213FC80]\n\t(No symbol) [0x00007FF67213DE84]\n\t(No symbol) [0x00007FF67213E29C]\n\t(No symbol) [0x00007FF67215A041]\n\t(No symbol) [0x00007FF6721EBA2E]\n\t(No symbol) [0x00007FF6721CCA6A]\n\t(No symbol) [0x00007FF6721EB041]\n\t(No symbol) [0x00007FF6721CC813]\n\t(No symbol) [0x00007FF67219A6E5]\n\t(No symbol) [0x00007FF67219B021]\n\tGetHandleVerifier [0x00007FF6723DF84D+1301229]\n\tGetHandleVerifier [0x00007FF6723EBDC7+1351783]\n\tGetHandleVerifier [0x00007FF6723E2A13+1313971]\n\tGetHandleVerifier [0x00007FF6722DDD16+245686]\n\t(No symbol) [0x00007FF67226759F]\n\t(No symbol) [0x00007FF672263814]\n\t(No symbol) [0x00007FF6722639A2]\n\t(No symbol) [0x00007FF67225A3FF]\n\tBaseThreadInitThunk [0x00007FFBA625257D+29]\n\tRtlUserThreadStart [0x00007FFBA6EEAF28+40]","time":{"start":1724854938528,"stop":1724854938528,"duration":0}},{"uid":"b57dee063d1b32da","status":"passed","time":{"start":1724698231208,"stop":1724698232909,"duration":1701}},{"uid":"c9748f278514da74","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=127.0.6533.122)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7E13C9642+30946]\n\t(No symbol) [0x00007FF7E137E3D9]\n\t(No symbol) [0x00007FF7E1276E09]\n\t(No symbol) [0x00007FF7E12C9712]\n\t(No symbol) [0x00007FF7E12BC271]\n\t(No symbol) [0x00007FF7E12ECA6A]\n\t(No symbol) [0x00007FF7E12BBBB6]\n\t(No symbol) [0x00007FF7E12ECC80]\n\t(No symbol) [0x00007FF7E130B041]\n\t(No symbol) [0x00007FF7E12EC813]\n\t(No symbol) [0x00007FF7E12BA6E5]\n\t(No symbol) [0x00007FF7E12BB021]\n\tGetHandleVerifier [0x00007FF7E14FF84D+1301229]\n\tGetHandleVerifier [0x00007FF7E150BDC7+1351783]\n\tGetHandleVerifier [0x00007FF7E1502A13+1313971]\n\tGetHandleVerifier [0x00007FF7E13FDD16+245686]\n\t(No symbol) [0x00007FF7E138759F]\n\t(No symbol) [0x00007FF7E1383814]\n\t(No symbol) [0x00007FF7E13839A2]\n\t(No symbol) [0x00007FF7E137A3FF]\n\tBaseThreadInitThunk [0x00007FFBA625257D+29]\n\tRtlUserThreadStart [0x00007FFBA6EEAF28+40]","time":{"start":1724698151004,"stop":1724698151023,"duration":19}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9aa59b1e30d4a194.json","parameterValues":[]}