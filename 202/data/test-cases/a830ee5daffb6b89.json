{"uid":"a830ee5daffb6b89","name":"test_contact","fullName":"test_progmusix.TestProgmusix#test_contact","historyId":"b5dce28c82d19d1a9dd51e40aa11eb9f","time":{"start":1724854938528,"stop":1724854938528,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=127.0.6533.122)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6722A9642+30946]\n\t(No symbol) [0x00007FF67225E3D9]\n\t(No symbol) [0x00007FF672156FDA]\n\t(No symbol) [0x00007FF67214F0B5]\n\t(No symbol) [0x00007FF6721401E9]\n\t(No symbol) [0x00007FF672141D62]\n\t(No symbol) [0x00007FF6721404CE]\n\t(No symbol) [0x00007FF67213FD41]\n\t(No symbol) [0x00007FF67213FC80]\n\t(No symbol) [0x00007FF67213DE84]\n\t(No symbol) [0x00007FF67213E29C]\n\t(No symbol) [0x00007FF67215A041]\n\t(No symbol) [0x00007FF6721EBA2E]\n\t(No symbol) [0x00007FF6721CCA6A]\n\t(No symbol) [0x00007FF6721EB041]\n\t(No symbol) [0x00007FF6721CC813]\n\t(No symbol) [0x00007FF67219A6E5]\n\t(No symbol) [0x00007FF67219B021]\n\tGetHandleVerifier [0x00007FF6723DF84D+1301229]\n\tGetHandleVerifier [0x00007FF6723EBDC7+1351783]\n\tGetHandleVerifier [0x00007FF6723E2A13+1313971]\n\tGetHandleVerifier [0x00007FF6722DDD16+245686]\n\t(No symbol) [0x00007FF67226759F]\n\t(No symbol) [0x00007FF672263814]\n\t(No symbol) [0x00007FF6722639A2]\n\t(No symbol) [0x00007FF67225A3FF]\n\tBaseThreadInitThunk [0x00007FFBA625257D+29]\n\tRtlUserThreadStart [0x00007FFBA6EEAF28+40]","statusTrace":"self = <test_progmusix.TestProgmusix object at 0x000001BFEA062030>\n\n    def setup_method(self):\n        page = ProgMusix(get_preconfigured_chrome_driver())\n        self.page = page\n>       page.open()\n\ntest_progmusix.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconfigs\\general_model.py:11: in open\n    self.browser.get(self.url)\nD:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\nD:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BFEA534140>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...07FF67225A3FF]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBA625257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFBA6EEAF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome-headless-shell=127.0.6533.122)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6722A9642+30946]\nE       \t(No symbol) [0x00007FF67225E3D9]\nE       \t(No symbol) [0x00007FF672156FDA]\nE       \t(No symbol) [0x00007FF67214F0B5]\nE       \t(No symbol) [0x00007FF6721401E9]\nE       \t(No symbol) [0x00007FF672141D62]\nE       \t(No symbol) [0x00007FF6721404CE]\nE       \t(No symbol) [0x00007FF67213FD41]\nE       \t(No symbol) [0x00007FF67213FC80]\nE       \t(No symbol) [0x00007FF67213DE84]\nE       \t(No symbol) [0x00007FF67213E29C]\nE       \t(No symbol) [0x00007FF67215A041]\nE       \t(No symbol) [0x00007FF6721EBA2E]\nE       \t(No symbol) [0x00007FF6721CCA6A]\nE       \t(No symbol) [0x00007FF6721EB041]\nE       \t(No symbol) [0x00007FF6721CC813]\nE       \t(No symbol) [0x00007FF67219A6E5]\nE       \t(No symbol) [0x00007FF67219B021]\nE       \tGetHandleVerifier [0x00007FF6723DF84D+1301229]\nE       \tGetHandleVerifier [0x00007FF6723EBDC7+1351783]\nE       \tGetHandleVerifier [0x00007FF6723E2A13+1313971]\nE       \tGetHandleVerifier [0x00007FF6722DDD16+245686]\nE       \t(No symbol) [0x00007FF67226759F]\nE       \t(No symbol) [0x00007FF672263814]\nE       \t(No symbol) [0x00007FF6722639A2]\nE       \t(No symbol) [0x00007FF67225A3FF]\nE       \tBaseThreadInitThunk [0x00007FFBA625257D+29]\nE       \tRtlUserThreadStart [0x00007FFBA6EEAF28+40]\n\nD:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestProgmusix","time":{"start":1724854938528,"stop":1724854942410,"duration":3882},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=127.0.6533.122)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6722A9642+30946]\n\t(No symbol) [0x00007FF67225E3D9]\n\t(No symbol) [0x00007FF672156FDA]\n\t(No symbol) [0x00007FF67214F0B5]\n\t(No symbol) [0x00007FF6721401E9]\n\t(No symbol) [0x00007FF672141D62]\n\t(No symbol) [0x00007FF6721404CE]\n\t(No symbol) [0x00007FF67213FD41]\n\t(No symbol) [0x00007FF67213FC80]\n\t(No symbol) [0x00007FF67213DE84]\n\t(No symbol) [0x00007FF67213E29C]\n\t(No symbol) [0x00007FF67215A041]\n\t(No symbol) [0x00007FF6721EBA2E]\n\t(No symbol) [0x00007FF6721CCA6A]\n\t(No symbol) [0x00007FF6721EB041]\n\t(No symbol) [0x00007FF6721CC813]\n\t(No symbol) [0x00007FF67219A6E5]\n\t(No symbol) [0x00007FF67219B021]\n\tGetHandleVerifier [0x00007FF6723DF84D+1301229]\n\tGetHandleVerifier [0x00007FF6723EBDC7+1351783]\n\tGetHandleVerifier [0x00007FF6723E2A13+1313971]\n\tGetHandleVerifier [0x00007FF6722DDD16+245686]\n\t(No symbol) [0x00007FF67226759F]\n\t(No symbol) [0x00007FF672263814]\n\t(No symbol) [0x00007FF6722639A2]\n\t(No symbol) [0x00007FF67225A3FF]\n\tBaseThreadInitThunk [0x00007FFBA625257D+29]\n\tRtlUserThreadStart [0x00007FFBA6EEAF28+40]\n\n","statusTrace":"  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1125, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 880, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py\", line 820, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py\", line 716, in _call_with_optional_argument\n    func()\n  File \"D:\\Suli\\ProgMusixproba\\test_progmusix.py\", line 10, in setup_method\n    page.open()\n  File \"D:\\Suli\\ProgMusixproba\\configs\\general_model.py\", line 11, in open\n    self.browser.get(self.url)\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 363, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Program Files\\Norbert\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"suite","value":"test_progmusix"},{"name":"subSuite","value":"TestProgmusix"},{"name":"host","value":"LenovoBert"},{"name":"thread","value":"695736-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_progmusix"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"a830ee5daffb6b89.json","parameterValues":[]}