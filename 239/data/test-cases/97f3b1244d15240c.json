{"uid":"97f3b1244d15240c","name":"test_categories","fullName":"test_progmusix.TestProgmusix#test_categories","historyId":"0987d45ac5608a8d110e96896b8212dd","time":{"start":1725043326555,"stop":1725043326565,"duration":10},"status":"failed","statusMessage":"AssertionError: assert '[]' == '[{\"id\":1,\"na...RADITIONAL\"}]'\n  \n  - [{\"id\":1,\"name\":\"WOODWIND\"},{\"id\":2,\"name\":\"BRASS INSTRUMENTS\"},{\"id\":3,\"name\":\"PERCUSSION INSTRUMENTS\"},{\"id\":4,\"name\":\"KEYBOARD INSTRUMENTS\"},{\"id\":5,\"name\":\"GUITAR FAMILY\"},{\"id\":6,\"name\":\"BOWED STRINGS\"},{\"id\":7,\"name\":\"MISC\"},{\"id\":14,\"name\":\"TRADITIONAL\"}]\n  + []","statusTrace":"self = <test_progmusix.TestProgmusix object at 0x7f0638b18400>\n\n    def test_categories(self):\n        url = \"http://localhost:8080/api/categories\"\n        payload = {}\n        headers = {}\n        for i in range(10):\n            response = requests.request(\"GET\", url, headers=headers, data=payload)\n            if response.status_code == 200:\n                break\n            time.sleep(10)\n    \n        assert response.status_code == 200, \"Failed to get a successful response from the backend.\"\n>       assert response.text == TESTDATA['Postman_categories']\nE       assert '[]' == '[{\"id\":1,\"na...RADITIONAL\"}]'\nE         \nE         - [{\"id\":1,\"name\":\"WOODWIND\"},{\"id\":2,\"name\":\"BRASS INSTRUMENTS\"},{\"id\":3,\"name\":\"PERCUSSION INSTRUMENTS\"},{\"id\":4,\"name\":\"KEYBOARD INSTRUMENTS\"},{\"id\":5,\"name\":\"GUITAR FAMILY\"},{\"id\":6,\"name\":\"BOWED STRINGS\"},{\"id\":7,\"name\":\"MISC\"},{\"id\":14,\"name\":\"TRADITIONAL\"}]\nE         + []\n\ntest_progmusix.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestProgmusix","time":{"start":1725043326041,"stop":1725043326555,"duration":514},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestProgmusix::0","time":{"start":1725043326605,"stop":1725043326713,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"test_progmusix"},{"name":"subSuite","value":"TestProgmusix"},{"name":"host","value":"fv-az1014-800"},{"name":"thread","value":"3281-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_progmusix"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"97f3b1244d15240c.json","parameterValues":[]}