{"uid":"64ae992a6704344b","name":"test_paying","fullName":"Tests.test_purchase.TestProgmusix#test_paying","historyId":"49bb07a6dc26e807a87eee63b336a562","time":{"start":1726063943627,"stop":1726063962503,"duration":18876},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <Tests.test_purchase.TestProgmusix object at 0x7fa582cd46a0>\n\n    def test_paying(self):\n        # self.page.purchase_random_method()\n>       self.page.paying_method()\n\nTests/test_purchase.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nProgMusix/page_model.py:430: in paying_method\n    self.purchase_random_method()\nProgMusix/page_model.py:407: in purchase_random_method\n    buttons = self.product_all_add_btn()\nProgMusix/page_model.py:618: in product_all_add_btn\n    return WebDriverWait(self.browser, 15).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"82c4ca5298f41fd00ba513961dfa4eca\")>\nmethod = <function visibility_of_all_elements_located.<locals>._predicate at 0x7fa5838d5b40>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestProgmusix","time":{"start":1726063942736,"stop":1726063943626,"duration":890},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestProgmusix::0","time":{"start":1726063962575,"stop":1726063962575,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_purchase"},{"name":"subSuite","value":"TestProgmusix"},{"name":"host","value":"fv-az1651-608"},{"name":"thread","value":"5269-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_purchase"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"64ae992a6704344b.json","parameterValues":[]}