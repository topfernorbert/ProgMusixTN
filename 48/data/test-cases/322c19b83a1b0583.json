{"uid":"322c19b83a1b0583","name":"test_contact","fullName":"test_progmusix.TestProgmusix#test_contact","historyId":"b5dce28c82d19d1a9dd51e40aa11eb9f","time":{"start":1724766484573,"stop":1724766485595,"duration":1022},"status":"broken","statusMessage":"mysql.connector.errors.ProgrammingError: 1049 (42000): Unknown database 'webshop'","statusTrace":"self = <mysql.connector.connection_cext.CMySQLConnection object at 0x7fbe10e7d840>\n\n    def _open_connection(self) -> None:\n        charset_name = self._character_set.get_info(self._charset_id)[0]\n        # pylint: disable=c-extension-no-member\n        self._cmysql = _mysql_connector.MySQL(\n            buffered=self._buffered,\n            raw=self._raw,\n            charset_name=charset_name,\n            connection_timeout=(self._connection_timeout or 0),\n            use_unicode=self._use_unicode,\n            auth_plugin=self._auth_plugin,\n            plugin_dir=self._plugin_dir,\n        )\n        # pylint: enable=c-extension-no-member\n        if not self.isset_client_flag(ClientFlag.CONNECT_ARGS):\n            self._conn_attrs = {}\n    \n        cnx_kwargs = {\n            \"host\": self._host,\n            \"user\": self._user,\n            \"password\": self._password,\n            \"password1\": self._password1,\n            \"password2\": self._password2,\n            \"password3\": self._password3,\n            \"database\": self._database,\n            \"port\": self._port,\n            \"client_flags\": self._client_flags,\n            \"unix_socket\": self._unix_socket,\n            \"compress\": self._compress,\n            \"ssl_disabled\": True,\n            \"conn_attrs\": self._conn_attrs,\n            \"local_infile\": self._allow_local_infile,\n            \"load_data_local_dir\": self._allow_local_infile_in_path,\n            \"oci_config_file\": self._oci_config_file,\n            \"oci_config_profile\": self._oci_config_profile,\n            \"webauthn_callback\": (\n                import_object(self._webauthn_callback)\n                if isinstance(self._webauthn_callback, str)\n                else self._webauthn_callback\n            ),\n        }\n    \n        tls_versions = self._ssl.get(\"tls_versions\")\n        if tls_versions is not None:\n            tls_versions.sort(reverse=True)  # type: ignore[union-attr]\n            tls_versions = \",\".join(tls_versions)\n        if self._ssl.get(\"tls_ciphersuites\") is not None:\n            ssl_ciphersuites = self._ssl.get(\"tls_ciphersuites\")[  # type: ignore[index]\n                0\n            ]\n            tls_ciphersuites = self._ssl.get(\"tls_ciphersuites\")[  # type: ignore[index]\n                1\n            ]\n        else:\n            ssl_ciphersuites = None\n            tls_ciphersuites = None\n        if (\n            tls_versions is not None\n            and \"TLSv1.3\" in tls_versions\n            and not tls_ciphersuites\n        ):\n            tls_ciphersuites = \"TLS_AES_256_GCM_SHA384\"\n        if not self._ssl_disabled:\n            cnx_kwargs.update(\n                {\n                    \"ssl_ca\": self._ssl.get(\"ca\"),\n                    \"ssl_cert\": self._ssl.get(\"cert\"),\n                    \"ssl_key\": self._ssl.get(\"key\"),\n                    \"ssl_cipher_suites\": ssl_ciphersuites,\n                    \"tls_versions\": tls_versions,\n                    \"tls_cipher_suites\": tls_ciphersuites,\n                    \"ssl_verify_cert\": self._ssl.get(\"verify_cert\") or False,\n                    \"ssl_verify_identity\": self._ssl.get(\"verify_identity\") or False,\n                    \"ssl_disabled\": self._ssl_disabled,\n                }\n            )\n    \n        if os.name == \"nt\" and self._auth_plugin_class == \"MySQLKerberosAuthPlugin\":\n            cnx_kwargs[\"use_kerberos_gssapi\"] = True\n    \n        try:\n>           self._cmysql.connect(**cnx_kwargs)\nE           _mysql_connector.MySQLInterfaceError: Unknown database 'webshop'\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/mysql/connector/connection_cext.py:334: MySQLInterfaceError\n\nThe above exception was the direct cause of the following exception:\n\nself = <test_progmusix.TestProgmusix object at 0x7fbe1040cfd0>\n\n    def test_contact(self):\n        self.page.contact_btn().click()\n        self.page.map_icon().click()\n        #Megjelenik-e a cím, ha rákattint a helyzetjelző ikonra:\n        assert TESTDATA['address'] in self.page.address()\n        self.page.contact_name().send_keys(TESTDATA['contact_name'])\n        self.page.contact_email().send_keys(TESTDATA['contact_email'])\n        self.page.contact_field().send_keys(TESTDATA['contact_field'])\n        self.page.contact_send_btm().click()\n        #Sikerességet igazoló üzenet megjelenése:\n        #assert self.page.contact_msg_succ() == TESTDATA['contact_msg_succ']\n        #Egyezik, megjelenik az adatbázisban a beírt név, email cím, üzenet szövege:\n>       assert TESTDATA['contact_name'] and TESTDATA['contact_email'] and TESTDATA['contact_field'] in self.page.last_msg()\n\ntest_progmusix.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_model.py:184: in last_msg\n    connection = mysql.connector.connect(\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/mysql/connector/pooling.py:322: in connect\n    return CMySQLConnection(*args, **kwargs)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/mysql/connector/connection_cext.py:151: in __init__\n    self.connect(**kwargs)\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/mysql/connector/abstracts.py:1399: in connect\n    self._open_connection()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mysql.connector.connection_cext.CMySQLConnection object at 0x7fbe10e7d840>\n\n    def _open_connection(self) -> None:\n        charset_name = self._character_set.get_info(self._charset_id)[0]\n        # pylint: disable=c-extension-no-member\n        self._cmysql = _mysql_connector.MySQL(\n            buffered=self._buffered,\n            raw=self._raw,\n            charset_name=charset_name,\n            connection_timeout=(self._connection_timeout or 0),\n            use_unicode=self._use_unicode,\n            auth_plugin=self._auth_plugin,\n            plugin_dir=self._plugin_dir,\n        )\n        # pylint: enable=c-extension-no-member\n        if not self.isset_client_flag(ClientFlag.CONNECT_ARGS):\n            self._conn_attrs = {}\n    \n        cnx_kwargs = {\n            \"host\": self._host,\n            \"user\": self._user,\n            \"password\": self._password,\n            \"password1\": self._password1,\n            \"password2\": self._password2,\n            \"password3\": self._password3,\n            \"database\": self._database,\n            \"port\": self._port,\n            \"client_flags\": self._client_flags,\n            \"unix_socket\": self._unix_socket,\n            \"compress\": self._compress,\n            \"ssl_disabled\": True,\n            \"conn_attrs\": self._conn_attrs,\n            \"local_infile\": self._allow_local_infile,\n            \"load_data_local_dir\": self._allow_local_infile_in_path,\n            \"oci_config_file\": self._oci_config_file,\n            \"oci_config_profile\": self._oci_config_profile,\n            \"webauthn_callback\": (\n                import_object(self._webauthn_callback)\n                if isinstance(self._webauthn_callback, str)\n                else self._webauthn_callback\n            ),\n        }\n    \n        tls_versions = self._ssl.get(\"tls_versions\")\n        if tls_versions is not None:\n            tls_versions.sort(reverse=True)  # type: ignore[union-attr]\n            tls_versions = \",\".join(tls_versions)\n        if self._ssl.get(\"tls_ciphersuites\") is not None:\n            ssl_ciphersuites = self._ssl.get(\"tls_ciphersuites\")[  # type: ignore[index]\n                0\n            ]\n            tls_ciphersuites = self._ssl.get(\"tls_ciphersuites\")[  # type: ignore[index]\n                1\n            ]\n        else:\n            ssl_ciphersuites = None\n            tls_ciphersuites = None\n        if (\n            tls_versions is not None\n            and \"TLSv1.3\" in tls_versions\n            and not tls_ciphersuites\n        ):\n            tls_ciphersuites = \"TLS_AES_256_GCM_SHA384\"\n        if not self._ssl_disabled:\n            cnx_kwargs.update(\n                {\n                    \"ssl_ca\": self._ssl.get(\"ca\"),\n                    \"ssl_cert\": self._ssl.get(\"cert\"),\n                    \"ssl_key\": self._ssl.get(\"key\"),\n                    \"ssl_cipher_suites\": ssl_ciphersuites,\n                    \"tls_versions\": tls_versions,\n                    \"tls_cipher_suites\": tls_ciphersuites,\n                    \"ssl_verify_cert\": self._ssl.get(\"verify_cert\") or False,\n                    \"ssl_verify_identity\": self._ssl.get(\"verify_identity\") or False,\n                    \"ssl_disabled\": self._ssl_disabled,\n                }\n            )\n    \n        if os.name == \"nt\" and self._auth_plugin_class == \"MySQLKerberosAuthPlugin\":\n            cnx_kwargs[\"use_kerberos_gssapi\"] = True\n    \n        try:\n            self._cmysql.connect(**cnx_kwargs)\n            self._cmysql.converter_str_fallback = self._converter_str_fallback\n            if self.converter:\n                self.converter.str_fallback = self._converter_str_fallback\n        except MySQLInterfaceError as err:\n>           raise get_mysql_exception(\n                msg=err.msg, errno=err.errno, sqlstate=err.sqlstate\n            ) from err\nE           mysql.connector.errors.ProgrammingError: 1049 (42000): Unknown database 'webshop'\n\n/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/mysql/connector/connection_cext.py:339: ProgrammingError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestProgmusix","time":{"start":1724766484055,"stop":1724766484572,"duration":517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestProgmusix::0","time":{"start":1724766485684,"stop":1724766485739,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"test_progmusix"},{"name":"subSuite","value":"TestProgmusix"},{"name":"host","value":"fv-az1542-119"},{"name":"thread","value":"3110-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_progmusix"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"322c19b83a1b0583.json","parameterValues":[]}