{
	"info": {
		"_postman_id": "c602a1e3-7ca4-4504-aef0-19bc7b0cb934",
		"name": "ProgMusix Final",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34958965"
	},
	"item": [
		{
			"name": "Registration",
			"item": [
				{
					"name": "Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userName\": \"cG9zdG1hbg==\",\r\n    \"email\": \"cHJvZ21hc3RlcnN0bnBvc21AZW5kdGVzdC1tYWlsLmlv\",\r\n    \"password\": \"VGVzdDEyMzQ1IQ==\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reg - üres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reg - invalid e-mail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userName\": \"RG9iaQ==\",\r\n    \"email\": \"UHJvZ01hc3RlcnNjdXN0b21lcmVuZHRlc3QtbWFpbC5pbw==\",\r\n    \"password\": \"RG9iaTEyMzQh\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reg - invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userName\": \"c3Q=\",\r\n    \"email\": \"UREJAZ20uY29t\",\r\n    \"password\": \"VGVzdDEyMzQh\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reg - invalid password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userName\": \"RG9iaWth\",\r\n    \"email\": \"RG9iaUBnbWEuY29t\",\r\n    \"password\": \"YXNk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reg - meglévő e-mail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userName\": \"RG9iaWth\",\r\n    \"email\": \"cHJvZ21hc3RlcnN0bkBlbmR0ZXN0LW1haWwuaW8=\",\r\n    \"password\": \"RG9iaWthMTIzNCE=\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Login - admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"Access token\", jsonData.access_token);\r",
									"pm.environment.set(\"Refresh token\", jsonData.refresh_token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login?userName=ProgMastersTN&password=Test12345!",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							],
							"query": [
								{
									"key": "userName",
									"value": "ProgMastersTN"
								},
								{
									"key": "password",
									"value": "Test12345!"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"Access_custom_token\", jsonData.access_token);\r",
									"pm.environment.set(\"Refresh_custom_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/login?userName=PostmanTN&password=Test12345!",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							],
							"query": [
								{
									"key": "userName",
									"value": "PostmanTN"
								},
								{
									"key": "password",
									"value": "Test12345!"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - üres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/login?userName=&password=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							],
							"query": [
								{
									"key": "userName",
									"value": ""
								},
								{
									"key": "password",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/login?userName=customer_1&password=Test1234!",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							],
							"query": [
								{
									"key": "userName",
									"value": "customer_1"
								},
								{
									"key": "password",
									"value": "Test1234!"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - invalid password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/login?userName=ProgMasterscustomer&password=test1234!",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							],
							"query": [
								{
									"key": "userName",
									"value": "ProgMasterscustomer"
								},
								{
									"key": "password",
									"value": "test1234!"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "User Data - admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/userData",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"userData"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Data customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access_custom_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/userData",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"userData"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Admin_new_category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Supporters\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/categories/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin_new product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 6000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Vuvuzela",
									"type": "text"
								},
								{
									"key": "description",
									"value": "A vuvuzela (zulu eredetű szó, jelentése: vú-vú hangot kelteni; ismert még lepatata (tswana nyelven), vagy darázskürt néven) egy dél-afrikai kürt. ",
									"type": "text"
								},
								{
									"key": "price",
									"value": "150",
									"type": "text"
								},
								{
									"key": "categoryIdList",
									"value": "15",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin_product_delete_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 6000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Vuvuzela",
									"type": "text"
								},
								{
									"key": "description",
									"value": "A vuvuzela (zulu eredetű szó, jelentése: vú-vú hangot kelteni; ismert még lepatata (tswana nyelven), vagy darázskürt néven) egy dél-afrikai kürt. ",
									"type": "text"
								},
								{
									"key": "price",
									"value": "150",
									"type": "text"
								},
								{
									"key": "categoryIdList",
									"value": "15",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/products/15",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_admin_new_category_meglévő",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400,401]);\r",
									"});\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Supporters\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/categories/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_admin_new product_duplicate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400,401,402,403]);\r",
									"});\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 6000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Vuvuzela",
									"type": "text"
								},
								{
									"key": "description",
									"value": "A vuvuzela (zulu eredetű szó, jelentése: vú-vú hangot kelteni; ismert még lepatata (tswana nyelven), vagy darázskürt néven) egy dél-afrikai kürt. ",
									"type": "text"
								},
								{
									"key": "price",
									"value": "150",
									"type": "text"
								},
								{
									"key": "categoryIdList",
									"value": "15",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive_ratings_for_product_by_product_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 6000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(6000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 4,\r\n    \"text\": \"jól működik!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ratings/13",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_ratings_for_product_by_not_available_product_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 4,\r\n    \"text\": \"jól működik!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/products/1002",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"1002"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_ratings_for_product_by_product_id_with_wrong_value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404,400]);\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404,400);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 100,\r\n    \"text\": \"jól működik!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/products/27",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"27"
							]
						}
					},
					"response": []
				},
				{
					"name": "All_categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "All_products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive_categories_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_categories_by_id_max_character",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories/20000000000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories",
								"20000000000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_products_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/10000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"10000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ratings_for_product_by_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/ratings/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_ratings_for_product_by_wrong_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400,404);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/ratings/100000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings",
								"100000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Purchase",
			"item": [
				{
					"name": "Order_wrongdocumentation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access_custom_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"price\": 90000,\r\n    \"productId\": 1,\r\n    \"userId\": 8,\r\n    \"name\": \"Teszt123\",\r\n    \"email\": \"vhvadhgnjmahlkjfhy@poplk.com\",\r\n    \"phoneNumber\": \"06301112233\",\r\n    \"billingName\": \"Fehér András\",\r\n    \"taxNumber\": \"111222333\",\r\n    \"zipCode\": \"1122\",\r\n    \"city\": \"Budapest\",\r\n    \"street\": \"Irányi u. 3.\",\r\n    \"shippingName\": \"Teszt123\",\r\n    \"shippingZipCode\": \"1122\",\r\n    \"shippingCity\": \"Budapest\",\r\n    \"shippingStreet\": \"Irányi u. 3.\",\r\n    \"deliveryInfo\": \"Kérem a csomagot gyorsan szállítsák ki, köszönöm!\",\r\n    \"paymentMethod\": \"Cash\",\r\n    \"productCartItems\": [\r\n        {\r\n          \"productId\": 1,\r\n          \"name\": \"Viola made of birch\",\r\n          \"description\": \"string\",\r\n          \"price\": 90000,\r\n          \"amount\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"purchases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access_custom_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Fehér András\",\r\n    \"email\": \"zruynzadwjdjzdqqet@poplk.com\",\r\n    \"phoneNumber\": \"06301112222\",\r\n    \"billingName\": \"Fehér András\",\r\n    \"taxNumber\": \"\",\r\n    \"zipCode\": \"1056\",\r\n    \"city\": \"Budapest\",\r\n    \"street\": \"Irányi u. 3.\",\r\n    \"shippingName\": \"Fehér András\",\r\n    \"shippingZipCode\": \"1056\",\r\n    \"shippingCity\": \"Budapest\",\r\n    \"shippingStreet\": \"Irányi u. 3.\",\r\n    \"deliveryInfo\": \"\",\r\n    \"payingMethod\": \"cash\",\r\n    \"productCartItems\": [\r\n        {\r\n            \"productId\": 6,\r\n            \"name\": \"Black Basson\",\r\n            \"price\": 115000,\r\n            \"amount\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"purchases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_order_wrong_productID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access_custom_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Fehér András\",\r\n    \"email\": \"zruynzadwjdjzdqqet@poplk.com\",\r\n    \"phoneNumber\": \"06301112222\",\r\n    \"billingName\": \"Fehér András\",\r\n    \"taxNumber\": \"\",\r\n    \"zipCode\": \"1056\",\r\n    \"city\": \"Budapest\",\r\n    \"street\": \"Irányi u. 3.\",\r\n    \"shippingName\": \"Fehér András\",\r\n    \"shippingZipCode\": \"1056\",\r\n    \"shippingCity\": \"Budapest\",\r\n    \"shippingStreet\": \"Irányi u. 3.\",\r\n    \"deliveryInfo\": \"\",\r\n    \"payingMethod\": \"cash\",\r\n    \"productCartItems\": [\r\n        {\r\n            \"productId\": 1000,\r\n            \"name\": \"Black Basson\",\r\n            \"price\": 115000,\r\n            \"amount\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"purchases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_order_wrong_invalid_email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access_custom_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Fehér András\",\r\n    \"email\": \"asd\",\r\n    \"phoneNumber\": \"06301112222\",\r\n    \"billingName\": \"Fehér András\",\r\n    \"taxNumber\": \"\",\r\n    \"zipCode\": \"1056\",\r\n    \"city\": \"Budapest\",\r\n    \"street\": \"Irányi u. 3.\",\r\n    \"shippingName\": \"Fehér András\",\r\n    \"shippingZipCode\": \"1056\",\r\n    \"shippingCity\": \"Budapest\",\r\n    \"shippingStreet\": \"Irányi u. 3.\",\r\n    \"deliveryInfo\": \"\",\r\n    \"payingMethod\": \"cash\",\r\n    \"productCartItems\": [\r\n        {\r\n            \"productId\": 1,\r\n            \"name\": \"Black Basson\",\r\n            \"price\": 115000,\r\n            \"amount\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"purchases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_order_wrong_short",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access_custom_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"asd\",\r\n    \"email\": \"asd@asd.com\",\r\n    \"phoneNumber\": \"012\",\r\n    \"billingName\": \"asd\",\r\n    \"taxNumber\": \"012\",\r\n    \"zipCode\": \"105\",\r\n    \"city\": \"Bu\",\r\n    \"street\": \"asd\",\r\n    \"shippingName\": \"asd\",\r\n    \"shippingZipCode\": \"105\",\r\n    \"shippingCity\": \"asd\",\r\n    \"shippingStreet\": \"asd.\",\r\n    \"deliveryInfo\": \"\",\r\n    \"payingMethod\": \"cash\",\r\n    \"productCartItems\": [\r\n        {\r\n            \"productId\": 1,\r\n            \"name\": \"Black Basson\",\r\n            \"price\": 115000,\r\n            \"amount\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"purchases"
							]
						}
					},
					"response": []
				},
				{
					"name": "My orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access_custom_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/purchases/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"purchases",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Charge",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"price\": 90000,\r\n    \"productId\": 1,\r\n    \"userId\": 8,\r\n    \"name\": \"Teszt123\",\r\n    \"email\": \"vhvadhgnjmahlkjfhy@poplk.com\",\r\n    \"phoneNumber\": \"06301112233\",\r\n    \"billingName\": \"Fehér András\",\r\n    \"taxNumber\": \"111222333\",\r\n    \"zipCode\": \"1122\",\r\n    \"city\": \"Budapest\",\r\n    \"street\": \"Irányi u. 3.\",\r\n    \"shippingName\": \"Teszt123\",\r\n    \"shippingZipCode\": \"1122\",\r\n    \"shippingCity\": \"Budapest\",\r\n    \"shippingStreet\": \"Irányi u. 3.\",\r\n    \"deliveryInfo\": \"Kérem a csomagot gyorsan szállítsák ki, köszönöm!\",\r\n    \"paymentMethod\": \"cash\",\r\n    \"productCartItems\": [\r\n        {\r\n          \"productId\": 1,\r\n          \"name\": \"Viola made of birch\",\r\n          \"description\": \"string\",\r\n          \"price\": 90000,\r\n          \"amount\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/purchases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"purchases"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Contact",
			"item": [
				{
					"name": "Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Access_custom_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ProgMaster\",\r\n    \"message\": \"Postman üzenet\",\r\n    \"email\": \"progmasters.prog.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"messages"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}